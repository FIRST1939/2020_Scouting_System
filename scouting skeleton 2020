#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Thu Jan 16 17:41:34 2020

@author: carolinebarstow
"""

#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Thu Jan 16 16:34:18 2020

@author: carolinebarstow
"""

#imports
from tkinter import Tk
from tkinter import *
from tkinter import ttk
from tkinter import font
import PIL 
from PIL import ImageTk, Image
    

class CounterClass:
    point = 0
#    root = Tk()

    def __init__(self, app, x, y, item, textX, textY):
        self.item = item
        self.app = app
        self.x = x
        self.y = y
        self.textX = textX
        self.textY = textY
        
        self.textLbl = Label(self.app, text = item).grid(column=textX, row=textY)
       

        self.DisplayLabel = Label(self.app, text = self.point)
        self.DisplayLabel.grid(column = self.x, row = self.y)
        

        self.Plus1Button = Button(self.app, text = "+", command=self.plus1, bg="green4")
        self.Plus1Button.grid(column = (self.x+1), row = y)

        self.Neg1Button = Button(self.app, text = "-", command=self.neg1, bg="red4")
        self.Neg1Button.grid(column = (self.x-1), row = y)

#        self.root.mainloop()
    
        
   
    def plus1(self):
        self.point += 1
        self.DisplayLabel["text"]=str(self.point)

        
    def neg1(self):
        if self.point  > 0:
            self.point -= 1
            self.DisplayLabel["text"]=str(self.point)


class lowGoalCounterClass:
    shotsMade = 0
    shotsMissed = 0

    def __init__(self, app, x, y, item, textX, textY):
        self.item = item
        self.app = app
        self.x = x
        self.y = y
        self.textX = textX
        self.textY = textY
        
        self.textLbl = Label(self.app, text = item).grid(column=textX, row=textY)
        self.spaceLBL = Label(self.app, text='        ').grid(column=x+3, row=y)

        self.madeDisplayLabel = Label(self.app, text = self.shotsMade)
        self.madeDisplayLabel.grid(column = (self.x+6), row = self.y)
        

        self.Plus1Button = Button(self.app, text = "+", command=self.madePlus1, bg="green4")
        self.Plus1Button.grid(column = (self.x+7), row = y)

        self.Neg1Button = Button(self.app, text = "-", command=self.madeNeg1, bg="red4")
        self.Neg1Button.grid(column = (self.x+5), row = y)

        self.Plus5Button = Button(self.app, text = "+", command=self.madePlus5, bg="green4")
        self.Plus5Button.grid(column = (self.x+8), row = y)

        self.Neg5Button = Button(self.app, text = "-", command=self.madeNeg5, bg="red4")
        self.Neg5Button.grid(column = (self.x+4), row = y)

        self.takenDisplayLabel = Label(self.app, text = self.shotsMissed)
        self.takenDisplayLabel.grid(column = self.x, row = self.y)
        

        self.takenPlus1Button = Button(self.app, text = "+", command=self.takenPlus1, bg="green4")
        self.takenPlus1Button.grid(column = (self.x+1), row = y)

        self.takenNeg1Button = Button(self.app, text = "-", command=self.takenNeg1, bg="red4")
        self.takenNeg1Button.grid(column = (self.x-1), row = y)

    
        self.takenPlus5Button = Button(self.app, text = "+", command=self.takenPlus5, bg="green4")
        self.takenPlus5Button.grid(column = (self.x+2), row = y, sticky='W')

        self.takenNeg5Button = Button(self.app, text = "-", command=self.takenNeg5, bg="red4")
        self.takenNeg5Button.grid(column = (self.x-2), row = y)

#        self.root.mainloop()
    
        
   
    def madePlus5(self):
        self.shotsMade += 5
#        self.shotsMissed += 5
        self.madeDisplayLabel["text"]=str(self.shotsMade)
#        self.takenDisplayLabel["text"]=str(self.shotsMissed)
        
    def madeNeg5(self):
        if self.shotsMade  >= 5:
            self.shotsMade -= 5
#            self.shotsMissed -=5
            self.madeDisplayLabel["text"]=str(self.shotsMade)
#            self.takenDisplayLabel["text"]=str(self.shotsMissed)
        else:
            self.shotsMade = 0
            self.shotsMissed = 0
            self.madeDisplayLabel["text"]=str(self.shotsMade)
            self.takenDisplayLabel["text"]=str(self.shotsMissed)
            
    def takenPlus5(self):
#        self.shotsMade += 5
        self.shotsMissed += 5
#        self.madeDisplayLabel["text"]=str(self.shotsMade)
        self.takenDisplayLabel["text"]=str(self.shotsMissed)
        
    def takenNeg5(self):
        if self.shotsMissed  >= self.shotsMade+5:
#            self.shotsMade -= 5
            self.shotsMissed -=5
#            self.madeDisplayLabel["text"]=str(self.shotsMade)
            self.takenDisplayLabel["text"]=str(self.shotsMissed)
        else:
           self.shotsMissed = self.shotsMade
           self.takenDisplayLabel["text"]=str(self.shotsMissed)
    
    def madePlus1(self):
        self.shotsMade += 1
        self.shotsMissed += 1
        self.madeDisplayLabel["text"]=str(self.shotsMade)
        self.takenDisplayLabel["text"]=str(self.shotsMissed)
        
    def madeNeg1(self):
        if self.shotsMade  > 0:
            self.shotsMade -= 1
            self.shotsMissed -=1
            self.madeDisplayLabel["text"]=str(self.shotsMade)
            self.takenDisplayLabel["text"]=str(self.shotsMissed)
            
    def takenPlus1(self):
#        self.shotsMade += 1
        self.shotsMissed += 1
#        self.madeDisplayLabel["text"]=str(self.shotsMade)
        self.takenDisplayLabel["text"]=str(self.shotsMissed)
        
    def takenNeg1(self):
        if self.shotsMissed  > self.shotsMade:
#            self.shotsMade -= 1
            self.shotsMissed -=1
#            self.madeDisplayLabel["text"]=str(self.shotsMade)
            self.takenDisplayLabel["text"]=str(self.shotsMissed)


class highGoalCounterClass:
    innerShotsMade = 0
    outerShotsMade = 0
    shotsMissed = 0

    def __init__(self, app, x, y, item, textX, textY):
        self.item = item
        self.app = app
        self.x = x
        self.y = y
        self.textX = textX
        self.textY = textY
        
        self.textLbl = Label(self.app, text = item).grid(column=textX, row=textY)
       
#inner made
        self.innerMadeDisplayLabel = Label(self.app, text = self.innerShotsMade)
        self.innerMadeDisplayLabel.grid(column = (self.x+6), row = self.y)

        self.innerPlus1Button = Button(self.app, text = "+", command=self.innerMadePlus1, bg="green4")
        self.innerPlus1Button.grid(column = (self.x+7), row = y)

        self.innerNeg1Button = Button(self.app, text = "-", command=self.innerMadeNeg1, bg="red4")
        self.innerNeg1Button.grid(column = (self.x+5), row = y)

        self.innerPlus5Button = Button(self.app, text = "+", command=self.innerMadePlus5, bg="green4")
        self.innerPlus5Button.grid(column = (self.x+8), row = y)

        self.innerNeg5Button = Button(self.app, text = "-", command=self.innerMadeNeg5, bg="red4")
        self.innerNeg5Button.grid(column = (self.x+4), row = y)

#outer made
        self.outerMadeDisplayLabel = Label(self.app, text = self.outerShotsMade)
        self.outerMadeDisplayLabel.grid(column = (self.x+6), row = self.y+1)        

        self.outerPlus1Button = Button(self.app, text = "+", command=self.outerMadePlus1, bg="green4")
        self.outerPlus1Button.grid(column = (self.x+7), row = y+1)

        self.outerNeg1Button = Button(self.app, text = "-", command=self.outerMadeNeg1, bg="red4")
        self.outerNeg1Button.grid(column = (self.x+5), row = y+1)

        self.outerPlus5Button = Button(self.app, text = "+", command=self.outerMadePlus5, bg="green4")
        self.outerPlus5Button.grid(column = (self.x+8), row = y+1)

        self.outerNeg5Button = Button(self.app, text = "-", command=self.outerMadeNeg5, bg="red4")
        self.outerNeg5Button.grid(column = (self.x+4), row = y+1)

#taken
        self.takenDisplayLabel = Label(self.app, text = self.shotsMissed)
        self.takenDisplayLabel.grid(column = self.x, row = self.y)
        
        self.takenPlus1Button = Button(self.app, text = "+", command=self.takenPlus1, bg="green4")
        self.takenPlus1Button.grid(column = (self.x+1), row = y)

        self.takenNeg1Button = Button(self.app, text = "-", command=self.takenNeg1, bg="red4")
        self.takenNeg1Button.grid(column = (self.x-1), row = y)

    
        self.takenPlus5Button = Button(self.app, text = "+", command=self.takenPlus5, bg="green4")
        self.takenPlus5Button.grid(column = (self.x+2), row = y, sticky='W')

        self.takenNeg5Button = Button(self.app, text = "-", command=self.takenNeg5, bg="red4")
        self.takenNeg5Button.grid(column = (self.x-2), row = y)

#        self.root.mainloop()
    
        
#inner made def   
    def innerMadePlus5(self):
        self.innerShotsMade += 5
        self.shotsMissed += 5
        self.innerMadeDisplayLabel["text"]=str(self.innerShotsMade)
        self.takenDisplayLabel["text"]=str(self.shotsMissed)
        
    def innerMadeNeg5(self):
        if self.innerShotsMade  >= 5:
            self.innerShotsMade -= 5
            self.shotsMissed -=5
            self.innerMadeDisplayLabel["text"]=str(self.innerShotsMade)
            self.takenDisplayLabel["text"]=str(self.shotsMissed)
        else:
            self.innerShotsMade = 0
            self.shotsMissed = 0
            self.madeDisplayLabel["text"]=str(self.innerShotsMade)
            self.takenDisplayLabel["text"]=str(self.shotsMissed)
            

    def innerMadePlus1(self):
        self.innerShotsMade += 1
        self.shotsMissed += 1
        self.innerMadeDisplayLabel["text"]=str(self.innerShotsMade)
        self.takenDisplayLabel["text"]=str(self.shotsMissed)
        
    def innerMadeNeg1(self):
        if self.innerShotsMade  > 0:
            self.innerShotsMade -= 1
            self.shotsMissed -=1
            self.innerMadeDisplayLabel["text"]=str(self.innerShotsMade)
            self.takenDisplayLabel["text"]=str(self.shotsMissed)

#outer made def
    def outerMadePlus5(self):
        self.outerShotsMade += 5
        self.shotsMissed += 5
        self.outerMadeDisplayLabel["text"]=str(self.outerShotsMade)
        self.takenDisplayLabel["text"]=str(self.shotsMissed)
        
    def outerMadeNeg5(self):
        if self.outerShotsMade  >= 5:
            self.outerShotsMade -= 5
            self.shotsMissed -=5
            self.outerMadeDisplayLabel["text"]=str(self.outerShotsMade)
            self.takenDisplayLabel["text"]=str(self.shotsMissed)
        else:
            self.outerShotsMade = 0
            self.shotsMissed = 0
            self.madeDisplayLabel["text"]=str(self.outerShotsMade)
            self.takenDisplayLabel["text"]=str(self.shotsMissed)
            

    def outerMadePlus1(self):
        self.outerShotsMade += 1
        self.shotsMissed += 1
        self.outerMadeDisplayLabel["text"]=str(self.outerShotsMade)
        self.takenDisplayLabel["text"]=str(self.shotsMissed)
        
    def outerMadeNeg1(self):
        if self.outerShotsMade  > 0:
            self.outerShotsMade -= 1
            self.shotsMissed -=1
            self.outerMadeDisplayLabel["text"]=str(self.outerShotsMade)
            self.takenDisplayLabel["text"]=str(self.shotsMissed)


#taken def
    def takenPlus5(self):
#        self.shotsMade += 5
        self.shotsMissed += 5
#        self.madeDisplayLabel["text"]=str(self.shotsMade)
        self.takenDisplayLabel["text"]=str(self.shotsMissed)
        
    def takenNeg5(self):
        if self.shotsMissed  >= self.outerShotsMade + self.innerShotsMade +5:
#            self.shotsMade -= 5
            self.shotsMissed -=5
#            self.madeDisplayLabel["text"]=str(self.shotsMade)
            self.takenDisplayLabel["text"]=str(self.shotsMissed)
        else:
           self.shotsMissed = self.innerShotsMade + self.outerShotsMade
           self.takenDisplayLabel["text"]=str(self.shotsMissed)
                
    def takenPlus1(self):
#        self.shotsMade += 1
        self.shotsMissed += 1
#        self.madeDisplayLabel["text"]=str(self.shotsMade)
        self.takenDisplayLabel["text"]=str(self.shotsMissed)
        
    def takenNeg1(self):
        if self.shotsMissed  > self.innerShotsMade + self.outerShotsMade:
#            self.shotsMade -= 1
            self.shotsMissed -=1
#            self.madeDisplayLabel["text"]=str(self.shotsMade)
            self.takenDisplayLabel["text"]=str(self.shotsMissed)

def sendToDatabase():
    pass

def screenClear():
    pass

def reinitscreen():
    pass

#opening tkinter
window = Tk() 
window.geometry('800x480')

window.title('scouting app 2020')

#Give it some style
style = ttk.Style()
style.theme_settings("default",{"TNotebook.Tab":{"configure":{"padding":[20,20]}}})
labelfont = font.Font(family= "times", size= 20)
window.option_add("*Font", labelfont)
labelfont = ('times', 15)
labelfont2 = ('times', 5)

    #edit the tabs here as needed
tab_control = ttk.Notebook(window)
preMatch = ttk.Frame(tab_control)
auto = ttk.Frame(tab_control)
reference = ttk.Frame(tab_control)
tele = ttk.Frame(tab_control)
endGame = ttk.Frame(tab_control)
postMatch = ttk.Frame(tab_control)
tab_control.add(preMatch, text='Pre-Match')
tab_control.add(auto, text='Auto')
tab_control.add(reference, text='Reference Image')
tab_control.add(tele, text='TeleOp')
tab_control.add(endGame, text='End Game')
tab_control.add(postMatch, text='Post-Match')
tab_control.pack(expand=1, fill='both')

#Prematch Screen
name = ttk.Entry(preMatch, width= 30)
name.bind('<Button-1>')
name.grid(column=1, row=0, columnspan=4)
nameLBL = Label(preMatch, text = 'Name:')
nameLBL.grid(column=0, row=0, ipady=17)

teamnum = ttk.Entry(preMatch, width=10)
teamnum.bind('<Button-1>')
teamnum.grid(column=7, row=0)
teamnumLBL = Label(preMatch, text='  Team# you are with:')
teamnumLBL.grid(row=0, column=5, columnspan=2)

autoShooterPos = IntVar()
aLocation = Radiobutton(preMatch, text = 'A', value = 1, var=autoShooterPos)
aLocation.grid(row=1, column=0)
bLocation = Radiobutton(preMatch, text='B', value = 2, var=autoShooterPos)
bLocation.grid(row=1, column=1)
cLocation = Radiobutton(preMatch, text = 'C', value = 3, var=autoShooterPos)
cLocation.grid(row=1, column=2)
dLocation = Radiobutton(preMatch, text = 'D', value = 4, var=autoShooterPos)
dLocation.grid(row=1, column=3)
eLocation = Radiobutton(preMatch, text = 'E', value = 5, var=autoShooterPos)
eLocation.grid(row=1, column=4)
fLocation = Radiobutton(preMatch, text = 'F', value = 6, var=autoShooterPos)
fLocation.grid(row=1, column=5)
gLocation = Radiobutton(preMatch, text = 'G', value = 7, var=autoShooterPos)
gLocation.grid(row=1, column=6, ipadx=14)
hLocation = Radiobutton(preMatch, text = 'H', value = 8, var=autoShooterPos)
hLocation.grid(row=1, column=7, ipadx=17)

#auto screen
crossLine_State = BooleanVar(False)
crossLine = Checkbutton(auto, text='Crossed Start Line?', var=crossLine_State)
crossLine.grid(row=0, column=0, ipady=17)

telePrep_State = BooleanVar(False)
telePrep = Checkbutton(auto, text='Prepared for Teleop?', var=telePrep_State)
telePrep.grid(row=0, column=7, ipady=17)

autoFoul = CounterClass(auto, 2, 10, 'Foul', 0, 10)
autoTechFoul = CounterClass(auto, 2, 11, 'Tech Foul', 0, 11)
autoLow = lowGoalCounterClass(auto, 3, 2, 'Low', 0, 2)
autoHigh = highGoalCounterClass(auto, 3, 3, 'High', 0, 3)
autoBallsPickedUp = CounterClass(auto, 2, 9, 'Balls Picked Up', 0, 9)

autoShooterPos = Label(auto, text='Shooter Position')
autoShooterPos.grid(column=0, row=13, ipady=23)
autoShooterPos = ttk.Combobox(auto)
autoShooterPos['values']= ("A", "B", "C", "D", "E", "F", "G", "H")
autoShooterPos.current(0)
autoShooterPos.grid(column= 1, row= 13, columnspan= 2)
autoShooterPos.config(width= 20)


autoEnter = Button(auto, text='enter', command=reinitscreen)
autoEnter.grid(row=17, column=4, ipady=20, ipadx=80)

#reference image
image = Image.open('Reference Image.jpg')
canvas = Canvas(reference,width = 600, height = 360)
photo = ImageTk.PhotoImage(image)
canvas.pack(expand=True,fill=BOTH)
canvas.create_image(300,190,image=photo)

#TELEOP pagE
            
teleFoul = CounterClass(tele, 3, 10, 'Foul', 0, 10)
teleTechFoul = CounterClass(tele, 9, 10, 'Tech Foul', 6, 10)
teleLowGoal = lowGoalCounterClass(tele, 3, 1, 'Low', 0, 1)
teleHighGoal = highGoalCounterClass(tele, 3, 2, 'Inner', 0, 2)
teleHighGoalLBL = Label(tele, text= 'Outer')
teleHighGoalLBL.grid(column=0, row=3)

rotationalControlLBL = Label(tele, text='Has Rotational Control?')
rotationalControlLBL.grid(column=0, row=9, ipady=23)
rotationalControl = ttk.Combobox(tele)
rotationalControl['values']= ("No", "Yes", "Fail")
rotationalControl.current(0)
rotationalControl.grid(column= 1, row= 9, columnspan=5)
rotationalControl.config(width= 5)
#
positionalControlLBL = Label(tele, text='Has Positional Control?')
positionalControlLBL.grid(column=8, row=9, columnspan=5)
positionalControl = ttk.Combobox(tele)
positionalControl['values']= ("No", "Yes", "Fail")
positionalControl.current(0)
positionalControl.grid(column= 13, row= 9, columnspan=5)
positionalControl.config(width= 5)

shooterPosLBL = Label(tele, text='Shooter Position')
shooterPosLBL.grid(column=0, row=8, ipady=23)
shooterPos = ttk.Combobox(tele)
shooterPos['values']= ("A", "B", "C", "D", "E", "F", "G", "H")
shooterPos.current(0)
shooterPos.grid(column= 1, row= 8, columnspan=5)
shooterPos.config(width= 5)

teleTakenLBL = Label(tele, text='Shots Taken')
teleTakenLBL.grid(column=1, row=0, columnspan=5)

teleMadeLBL = Label(tele, text='Shots Made')
teleMadeLBL.grid(column=7, row=0, columnspan=5)

defense_State = BooleanVar(False)
defense = Checkbutton(tele, text='Played Defense?', var=defense_State)
defense.grid(column= 13, row= 10, columnspan=5)


teleEnter = Button(tele, text='enter', command=reinitscreen)
teleEnter.grid(row=8, column=13, ipady=13, ipadx=80)

#End Game

fell_State = BooleanVar(False)
fell = Checkbutton(endGame, text='Fell Off Bar?', var=fell_State)
fell.grid(column= 0, row= 0, columnspan=5)

buddy_State = BooleanVar(False)
buddy = Checkbutton(endGame, text='Buddy Climb?', var=buddy_State)
buddy.grid(column= 0, row= 4, columnspan=5)

hitOpponent_State = BooleanVar(False)
hitOpponent = Checkbutton(endGame, text='Hit Opponent While Climbing?', var=hitOpponent_State)
hitOpponent.grid(column= 0, row= 7, columnspan=5)

leveledBar_State = BooleanVar(False)
leveledBar = Checkbutton(endGame, text='Leveled the Bar?', var=leveledBar_State)
leveledBar.grid(column= 0, row= 10, columnspan=5)

barLevelLBL = Label(endGame, text='What Level Stage Climb?')
barLevelLBL.grid(column=20, row=0, ipady=23)
barLevel = ttk.Combobox(endGame)
barLevel['values']= ("When It Was Leveled", "Middle Of The Bar", "High Side Of The Bar", "Low Side Of The Bar", "No Climb")
barLevel.current(0)
barLevel.grid(column= 20, row= 3, columnspan=5)
barLevel.config(width= 15)

climbFrom = IntVar()
aLocation = Radiobutton(endGame, text = 'Bar', value = 1, var=climbFrom)
aLocation.grid(row=10, column=15)
bLocation = Radiobutton(endGame, text='Rung', value = 2, var=climbFrom)
bLocation.grid(row=10, column=18)


window.mainloop()
